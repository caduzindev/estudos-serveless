org: carlosdevmaster
app: trigger-dynamo
service: trigger-dynamo

frameworkVersion: '3'

provider:
  name: aws
  region: us-east-1
  runtime: nodejs14.x
  environment:
    DYNAMORDB_TABLE: Heroes
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - dynamodb:GeItem
            - dynamodb:UpdateItem
            - dynamodb:PutItem
            - dynamodb:ListStreams
            - dynamodb:DescribeStream
          Resource:
            - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMORDB_TABLE}"
            - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMORDB_TABLE}/index/*"
            - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMORDB_TABLE}/stream/*"
resources:
  Resources:
    HeroesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMORDB_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: nome
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: nome
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES

functions:
  hero-insert:
    handler: handler.heroesInsert
    events:
      - http:
          path: heroes
          method: post
          cors: true
  hero-trigger:
    handler: handler.heroesTrigger
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt: [HeroesTable, StreamArn]
